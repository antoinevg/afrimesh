#!/bin/sh /etc/rc.common
# Copyright (C) 2006 OpenWrt.org

START=50 
DEST=
DEFAULT=$DEST/etc/default/asterisk
OPTIONS=""


is_false() {
    [ $1 != "true" ] && [ $1 != "on" ] && [ $1 != "1" ] && [ $1 != "yes" ]
}


append_sip_parm() {
  local section="$1"
  local option="$2"
  local default="$3"
  local key="$4"
  if [ -z "$key" ] ; then 
      key="$option"
  fi
  local value
  config_get value "$section" "$option"
  if [ -z "$value" ] ; then
      value="DEFAULT->$default"
  fi
  if [ ! -z "$key" ] && [ ! -z "$value" ] ; then
    append sipconf "\n$key=$value"
  else
    echo "UNKNOWN: $key . $value"
  fi
}


append_sip() {
  local cfg="$1"
  append sipconf "\n\n[$cfg]"
  append_sip_parm "$cfg" "type"        "peer"     "type"
  append_sip_parm "$cfg" "username"    "potato"
  append_sip_parm "$cfg" "fromuser"    "potato"
  append_sip_parm "$cfg" "secret"      "password"
  append_sip_parm "$cfg" "context"     "default"
  append_sip_parm "$cfg" "disallow"    "all"
  append_sip_parm "$cfg" "qualify"     "500"
  append_sip_parm "$cfg" "dtmfmode"    "rfc2833"
  append_sip_parm "$cfg" "callerid"    "server"
  append_sip_parm "$cfg" "canreinvite" "no"
  append_sip_parm "$cfg" "host"        "10.0.0.1"
  append sipconf "\nallow=$(uci get asterisk.@sipgeneral[0].allow)"
}


configure_sip() {
  # build & write out sip configuration  -  TODO don't write sip.conf
  cat > /etc/asterisk/sip.conf << EOF
[general]
context=default
;allowguest=no; Allow or reject guest calls (default is yes)
allowoverlap=no
bindport=5060
bindaddr=0.0.0.0
srvlookup=no

#include "afrimesh.sip.conf"
EOF
  sipconf=""
  config_foreach append_sip sip
  echo -e "$sipconf" >> /etc/asterisk/afrimesh.sip.conf

  # build & write out extensions.conf  -  TODO don't write extensions.conf
  extconf=""
  cat > /etc/asterisk/extensions.conf << EOF
[general]
static=yes
writeprotect=no
clearglobalvars=no
[globals]
CONSOLE=Console/dsp; Console interface for demo
IAXINFO=guest; IAXtel username/password
TRUNK=Zap/g2; Trunk interface
TRUNKMSD=1; MSD digits to strip (usually 1 or 0)

#include "afrimesh.extensions.conf"
EOF
  cat > /etc/asterisk/afrimesh.extensions.conf << EOF
[default]
exten => 4000,1,Dial(MP/1)
exten => _1,1,Dial(SIP/ip04/1001)  ; call my analog phone
exten => _2,1,Dial(SIP/ip04/7002)  ; call SIP phone
exten => _3,1,Dial(SIP/ip04/1003)
exten => _0,1,DIal(SIP/ip04/1004)   
EOF
}


configure_asterisk() {
  # load afrimesh configuration from UCI
  config_load afrimesh
  config_get sip_enable "telephony" "sip"
  config_get iax_enable "telephony" "iax"

  # load asterisk configuration from UCI
  config_load asterisk

  # clear any existing sip configuration 
  echo > /etc/asterisk/afrimesh.sip.conf
  echo > /etc/asterisk/afrimesh.extensions.conf

  # configure any sip trunks enabled in afrimesh
  #is_false $sip_enable && echo "disabled" || return
  if is_false $sip_enable ; then
      echo "sip disabled in afrimesh"
      return
  else
      configure_sip
  fi
  
}


reload() {
  [ -f $DEST/var/run/asterisk.pid ] && kill $(cat $DEST/var/run/asterisk.pid) >/dev/null 2>&1
  sleep 1
  echo -n "reloading asterisk..."
  configure_asterisk
  /usr/sbin/asterisk -f 2>&1 > /dev/null &
  echo "done"
}


start() {
  # create asterisk directories
  [ -f $DEFAULT ] && . $DEFAULT
  [ -d $DEST/var/run ] || mkdir -p $DEST/var/run
  [ -d $DEST/var/log/asterisk ] || mkdir -p $DEST/var/log/asterisk
  [ -d $DEST/var/spool/asterisk ] || mkdir -p $DEST/var/spool/asterisk
  [ -d /var/spool/asterisk ] || mkdir -p /var/spool/asterisk
  [ -h $DEST/usr/lib/asterisk/astdb ] || ln -sf /var/spool/asterisk/astdb $DEST/usr/lib/asterisk/astdb

  # create device nodes if needed
  [ ! -c /dev/8250mp ] && mknod -m 666 /dev/8250mp c 33 0
  [ ! -c /dev/mp     ] && mknod -m 666 /dev/mp     c 34 0
  
  # load kernel modules if needed
  [ $(cut -d ' ' -f 1 /proc/modules | grep -c "^serial_core") -eq 0 ] && insmod /usr/lib/serial_core.ko
  [ $(cut -d ' ' -f 1 /proc/modules | grep -c "^8250mp")      -eq 0 ] && insmod /usr/lib/8250mp.ko
  [ $(cut -d ' ' -f 1 /proc/modules | grep -c "^mp")          -eq 0 ] && insmod /usr/lib/mp.ko
  sleep 1

  # create the includes for afrimesh controlled config
  configure_asterisk

  # start up asterisk
  # $DEST/usr/sbin/asterisk $OPTIONS
  /usr/sbin/asterisk -f 2>&1 > /dev/null &
}


stop() {
  [ -f $DEST/var/run/asterisk.pid ] && kill $(cat $DEST/var/run/asterisk.pid) >/dev/null 2>&1
}

